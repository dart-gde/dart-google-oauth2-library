{"comment":"A composable, [Future]-based library for making HTTP requests.\n\n## Installing ##\n\nUse [pub][] to install this package. Add the following to your\n`pubspec.yaml` file.\n\n    dependencies:\n      http: any\n\nThen run `pub install`.\n\nFor more information, see the\n[http package on pub.dartlang.org](http://pub.dartlang.org/packages/http).\n\nThe easiest way to use this library is via the top-level functions. They\nallow you to make individual HTTP requests with minimal hassle:\n\n    import 'package:http/http.dart' as http;\n\n    var url = \"http://example.com/whatsit/create\";\n    http.post(url, fields: {\"name\": \"doodle\", \"color\": \"blue\"})\n        .then((response) {\n      print(\"Response status: ${response.statusCode}\");\n      print(\"Response body: ${response.body}\");\n    });\n\n    http.read(\"http://example.com/foobar.txt\").then(print);\n\nIf you're making multiple requests to the same server, you can keep open a\npersistent connection by using a [Client] rather than making one-off\nrequests. If you do this, make sure to close the client when you're done:\n\n    var client = new http.Client();\n    client.post(\n        \"http://example.com/whatsit/create\",\n        fields: {\"name\": \"doodle\", \"color\": \"blue\"})\n      .then((response) => client.get(response.bodyFields['uri']))\n      .then((response) => print(response.body))\n      .whenComplete(client.close);\n\nYou can also exert more fine-grained control over your requests and\nresponses by creating [Request] or [StreamedRequest] objects yourself and\npassing them to [Client.send].\n\nThis package is designed to be composable. This makes it easy for external\nlibraries to work with one another to add behavior to it. Libraries wishing\nto add behavior should create a subclass of [BaseClient] that wraps another\n[Client] and adds the desired behavior:\n\n    class UserAgentClient extends http.BaseClient {\n      final String userAgent;\n      final http.Client _inner;\n\n      UserAgentClient(this.userAgent, this._inner);\n\n      Future<StreamedResponse> send(BaseRequest request) {\n        request.headers[HttpHeaders.USER_AGENT] = userAgent;\n        return _inner.send(request);\n      }\n    }\n\n[pub]: http://pub.dartlang.org","uri":"package:http/http.dart","name":"package:http/http.dart","id":"http","children":[{"returnType":{"refId":"dart.async/Future","name":"Future"},"name":"_withClient","isPrivate":true,"id":"_withClient1()","children":[{"ref":{"refId":"dart.core/Function","name":"Function"},"name":"fn","id":"fn","children":[{"returnType":{"refId":"dart.async/Future","name":"Future"},"uri":"dart-sdk/lib/core/function.dart","name":"Function","id":"Function","children":[{"uri":"package:http/http.dart","name":"Client","id":"Client","line":"184","kind":"param"}],"line":"13","kind":"functiontype"}],"kind":"param"}],"line":"184","kind":"method"},{"returnType":{"refId":"dart.async/Future","arguments":[{"refId":"dart.typed_data/Uint8List","name":"Uint8List"}],"name":"Future"},"comment":"Sends an HTTP GET request with the given headers to the given URL, which can\nbe a [Uri] or a [String], and returns a Future that completes to the body of\nthe response as a list of bytes.\n\nThe Future will emit an [HttpException] if the response doesn't have a\nsuccess status code.\n\nThis automatically initializes a new [Client] and closes that client once\nthe request is complete. If you're planning on making multiple requests to\nthe same server, you should use a single [Client] for all of those requests.\n\nFor more fine-grained control over the request and response, use [Request]\ninstead.","name":"readBytes","id":"readBytes2()","children":[{"name":"url","id":"url","kind":"param"},{"isNamed":true,"ref":{"refId":"dart.core/Map","arguments":[{"refId":"dart.core/String","name":"String"},{"refId":"dart.core/String","name":"String"}],"name":"Map"},"isOptional":true,"name":"headers","id":"headers","kind":"param"}],"line":"181","kind":"method"},{"returnType":{"refId":"dart.async/Future","arguments":[{"refId":"dart.core/String","name":"String"}],"name":"Future"},"comment":"Sends an HTTP GET request with the given headers to the given URL, which can\nbe a [Uri] or a [String], and returns a Future that completes to the body of\nthe response as a [String].\n\nThe Future will emit an [HttpException] if the response doesn't have a\nsuccess status code.\n\nThis automatically initializes a new [Client] and closes that client once\nthe request is complete. If you're planning on making multiple requests to\nthe same server, you should use a single [Client] for all of those requests.\n\nFor more fine-grained control over the request and response, use [Request]\ninstead.","name":"read","id":"read2()","children":[{"name":"url","id":"url","kind":"param"},{"isNamed":true,"ref":{"refId":"dart.core/Map","arguments":[{"refId":"dart.core/String","name":"String"},{"refId":"dart.core/String","name":"String"}],"name":"Map"},"isOptional":true,"name":"headers","id":"headers","kind":"param"}],"line":"165","kind":"method"},{"returnType":{"refId":"dart.async/Future","arguments":[{"refId":"response/Response","name":"Response"}],"name":"Future"},"comment":"Sends an HTTP DELETE request with the given headers to the given URL, which\ncan be a [Uri] or a [String].\n\nThis automatically initializes a new [Client] and closes that client once\nthe request is complete. If you're planning on making multiple requests to\nthe same server, you should use a single [Client] for all of those requests.\n\nFor more fine-grained control over the request, use [Request] instead.","name":"delete","id":"delete2()","children":[{"name":"url","id":"url","kind":"param"},{"isNamed":true,"ref":{"refId":"dart.core/Map","arguments":[{"refId":"dart.core/String","name":"String"},{"refId":"dart.core/String","name":"String"}],"name":"Map"},"isOptional":true,"name":"headers","id":"headers","kind":"param"}],"line":"149","kind":"method"},{"returnType":{"refId":"dart.async/Future","arguments":[{"refId":"response/Response","name":"Response"}],"name":"Future"},"comment":"Sends an HTTP POST request with the given headers and fields to the given\nURL, which can be a [Uri] or a [String]. If any fields are specified, the\ncontent-type is automatically set to `\"application/x-www-form-urlencoded\"`.\n\nThis automatically initializes a new [Client] and closes that client once\nthe request is complete. If you're planning on making multiple requests to\nthe same server, you should use a single [Client] for all of those requests.\n\nFor more fine-grained control over the request, use [Request] or\n[StreamedRequest] instead.","name":"put","id":"put3()","children":[{"name":"url","id":"url","kind":"param"},{"isNamed":true,"ref":{"refId":"dart.core/Map","arguments":[{"refId":"dart.core/String","name":"String"},{"refId":"dart.core/String","name":"String"}],"name":"Map"},"isOptional":true,"name":"headers","id":"headers","line":"137","kind":"param"},{"isNamed":true,"ref":{"refId":"dart.core/Map","arguments":[{"refId":"dart.core/String","name":"String"},{"refId":"dart.core/String","name":"String"}],"name":"Map"},"isOptional":true,"name":"fields","id":"fields","line":"138","kind":"param"}],"line":"136","kind":"method"},{"returnType":{"refId":"dart.async/Future","arguments":[{"refId":"response/Response","name":"Response"}],"name":"Future"},"comment":"Sends an HTTP POST request with the given headers and fields to the given\nURL, which an be a [Uri] or a [String]. If any fields are specified, the\ncontent-type is automatically set to `\"application/x-www-form-urlencoded\"`.\n\nThis automatically initializes a new [Client] and closes that client once\nthe request is complete. If you're planning on making multiple requests to\nthe same server, you should use a single [Client] for all of those requests.\n\nFor more fine-grained control over the request, use [Request] or\n[StreamedRequest] instead.","name":"post","id":"post3()","children":[{"name":"url","id":"url","kind":"param"},{"isNamed":true,"ref":{"refId":"dart.core/Map","arguments":[{"refId":"dart.core/String","name":"String"},{"refId":"dart.core/String","name":"String"}],"name":"Map"},"isOptional":true,"name":"headers","id":"headers","line":"122","kind":"param"},{"isNamed":true,"ref":{"refId":"dart.core/Map","arguments":[{"refId":"dart.core/String","name":"String"},{"refId":"dart.core/String","name":"String"}],"name":"Map"},"isOptional":true,"name":"fields","id":"fields","line":"123","kind":"param"}],"line":"121","kind":"method"},{"returnType":{"refId":"dart.async/Future","arguments":[{"refId":"response/Response","name":"Response"}],"name":"Future"},"comment":"Sends an HTTP GET request with the given headers to the given URL, which can\nbe a [Uri] or a [String].\n\nThis automatically initializes a new [Client] and closes that client once\nthe request is complete. If you're planning on making multiple requests to\nthe same server, you should use a single [Client] for all of those requests.\n\nFor more fine-grained control over the request, use [Request] instead.","name":"get","id":"get2()","children":[{"name":"url","id":"url","kind":"param"},{"isNamed":true,"ref":{"refId":"dart.core/Map","arguments":[{"refId":"dart.core/String","name":"String"},{"refId":"dart.core/String","name":"String"}],"name":"Map"},"isOptional":true,"name":"headers","id":"headers","kind":"param"}],"line":"108","kind":"method"},{"returnType":{"refId":"dart.async/Future","arguments":[{"refId":"response/Response","name":"Response"}],"name":"Future"},"comment":"Sends an HTTP HEAD request with the given headers to the given URL, which\ncan be a [Uri] or a [String].\n\nThis automatically initializes a new [Client] and closes that client once\nthe request is complete. If you're planning on making multiple requests to\nthe same server, you should use a single [Client] for all of those requests.\n\nFor more fine-grained control over the request, use [Request] instead.","name":"head","id":"head2()","children":[{"name":"url","id":"url","kind":"param"},{"isNamed":true,"ref":{"refId":"dart.core/Map","arguments":[{"refId":"dart.core/String","name":"String"},{"refId":"dart.core/String","name":"String"}],"name":"Map"},"isOptional":true,"name":"headers","id":"headers","kind":"param"}],"line":"97","kind":"method"}],"line":"68","kind":"library"}