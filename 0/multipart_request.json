{"dependencies":[{"uri":"dart-sdk/lib/core/core.dart","name":"dart:core","id":"dart.core","children":[{"comment":"\nEverything in Dart is an [Object].\n","uri":"dart-sdk/lib/core/object.dart","name":"Object","id":"Object","children":[{"returnType":{"refId":"dart.core/bool","name":"bool"},"isOperator":true,"comment":"\nThe equality operator.\n\nThe default behavior for all [Object]s is to return true if and\nonly if [:this:] and [other] are the same object.\n\nIf a subclass overrides the equality operator it should override\nthe [hashCode] method as well to maintain consistency.\n","name":"==","id":"==1()","children":[{"name":"other","id":"other","kind":"param"}],"line":"29","kind":"method"},{"returnType":{"refId":"dart.core/String","name":"String"},"comment":"\nReturns a string representation of this object.\n","name":"toString","id":"toString0()","line":"48","kind":"method"},{"comment":"\n[noSuchMethod] is invoked when users invoke a non-existant method\non an object. The name of the method and the arguments of the\ninvocation are passed to [noSuchMethod] in an [Invocation].\nIf [noSuchMethod] returns a value, that value becomes the result of\nthe original invocation.\n\nThe default behavior of [noSuchMethod] is to throw a\n[noSuchMethodError].\n","name":"noSuchMethod","id":"noSuchMethod1()","children":[{"ref":{"refId":"dart.core/Invocation","name":"Invocation"},"name":"invocation","id":"invocation","kind":"param"}],"line":"60","kind":"method"},{"ref":{"refId":"dart.core/int","name":"int"},"comment":"\nGet a hash code for this object.\n\nAll objects have hash codes. Hash codes are guaranteed to be the\nsame for objects that are equal when compared using the equality\noperator [:==:]. Other than that there are no guarantees about\nthe hash codes. They will not be consistent between runs and\nthere are no distribution guarantees.\n\nIf a subclass overrides [hashCode] it should override the\nequality operator as well to maintain consistency.\n","name":"hashCode","id":"hashCode","line":"43","kind":"property"},{"ref":{"refId":"dart.core/Type","name":"Type"},"comment":"\nA representation of the runtime type of the object.\n","name":"runtimeType","id":"runtimeType","line":"65","kind":"property"},{"comment":"\nCreates a new [Object] instance.\n\n[Object] instances have no meaningful state, and are only useful\nthrough their identity. An [Object] instance is equal to itself\nonly.\n","name":"Object","id":"Object0()","line":"18","kind":"constructor"}],"line":"10","kind":"class"}],"line":"5","kind":"library"},{"uri":"package:http/src/base_request.dart","name":"package:http/src/base_request.dart","id":"base_request","children":[{"isAbstract":true,"superclass":{"refId":"dart.core/Object","name":"Object"},"comment":"The base class for HTTP requests.\n\nSubclasses of [BaseRequest] can be constructed manually and passed to\n[BaseClient.send], which allows the user to provide fine-grained control\nover the request properties. However, usually it's easier to use convenience\nmethods like [get] or [BaseClient.get].","name":"BaseRequest","id":"BaseRequest","children":[{"isSetter":true,"name":"contentLength=","id":"contentLength=1()","children":[{"ref":{"refId":"dart.core/int","name":"int"},"name":"value","id":"value","kind":"param"}],"line":"37","kind":"method"},{"isSetter":true,"name":"persistentConnection=","id":"persistentConnection=1()","children":[{"ref":{"refId":"dart.core/bool","name":"bool"},"name":"value","id":"value","kind":"param"}],"line":"47","kind":"method"},{"isSetter":true,"name":"followRedirects=","id":"followRedirects=1()","children":[{"ref":{"refId":"dart.core/bool","name":"bool"},"name":"value","id":"value","kind":"param"}],"line":"57","kind":"method"},{"isSetter":true,"name":"maxRedirects=","id":"maxRedirects=1()","children":[{"ref":{"refId":"dart.core/int","name":"int"},"name":"value","id":"value","kind":"param"}],"line":"68","kind":"method"},{"returnType":{"refId":"byte_stream/ByteStream","name":"ByteStream"},"comment":"Finalizes the HTTP request in preparation for it being sent. This freezes\nall mutable fields and returns a single-subscription [ByteStream] that\nemits the body of the request.\n\nThe base implementation of this returns null rather than a [ByteStream];\nsubclasses are responsible for creating the return value, which should be\nsingle-subscription to ensure that no data is dropped. They should also\nfreeze any additional mutable fields they add that don't make sense to\nchange after the request headers are sent.","name":"finalize","id":"finalize0()","line":"96","kind":"method"},{"returnType":{"refId":"dart.async/Future","arguments":[{"refId":"streamed_response/StreamedResponse","name":"StreamedResponse"}],"name":"Future"},"comment":"Sends this request.\n\nThis automatically initializes a new [Client] and closes that client once\nthe request is complete. If you're planning on making multiple requests to\nthe same server, you should use a single [Client] for all of those\nrequests.","name":"send","id":"send0()","line":"109","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"Throws an error if this request has been finalized.","name":"_checkFinalized","isPrivate":true,"id":"_checkFinalized0()","line":"129","kind":"method"},{"returnType":{"refId":"dart.core/String","name":"String"},"name":"toString","id":"toString0()","line":"134","kind":"method"},{"ref":{"refId":"dart.core/int","name":"int"},"comment":"The size of the request body, in bytes. This defaults to -1, which\nindicates that the size of the request is not known in advance.","name":"contentLength","id":"contentLength","line":"34","kind":"property"},{"ref":{"refId":"dart.core/bool","name":"bool"},"comment":"Whether a persistent connection should be maintained with the server.\nDefaults to true.","name":"persistentConnection","id":"persistentConnection","line":"44","kind":"property"},{"ref":{"refId":"dart.core/bool","name":"bool"},"comment":"Whether the client should follow redirects while resolving this request.\nDefaults to true.","name":"followRedirects","id":"followRedirects","line":"54","kind":"property"},{"ref":{"refId":"dart.core/int","name":"int"},"comment":"The maximum number of redirects to follow when [followRedirects] is true.\nIf this number is exceeded the [BaseResponse] future will signal a\n[RedirectLimitExceeded] exception. Defaults to 5.","name":"maxRedirects","id":"maxRedirects","line":"65","kind":"property"},{"ref":{"refId":"dart.core/bool","name":"bool"},"comment":"Whether the request has been finalized.","name":"finalized","id":"finalized","line":"80","kind":"property"},{"ref":{"refId":"dart.core/String","name":"String"},"isFinal":true,"comment":"The HTTP method of the request. Most commonly \"GET\" or \"POST\", less\ncommonly \"HEAD\", \"PUT\", or \"DELETE\". Non-standard method names are also\nsupported.","name":"method","id":"method","line":"27","kind":"variable"},{"ref":{"refId":"dart.uri/Uri","name":"Uri"},"isFinal":true,"comment":"The URL to which the request will be sent.","name":"url","id":"url","line":"30","kind":"variable"},{"ref":{"refId":"dart.core/int","name":"int"},"name":"_contentLength","isPrivate":true,"id":"_contentLength","line":"35","kind":"variable"},{"ref":{"refId":"dart.core/bool","name":"bool"},"name":"_persistentConnection","isPrivate":true,"id":"_persistentConnection","line":"45","kind":"variable"},{"ref":{"refId":"dart.core/bool","name":"bool"},"name":"_followRedirects","isPrivate":true,"id":"_followRedirects","line":"55","kind":"variable"},{"ref":{"refId":"dart.core/int","name":"int"},"name":"_maxRedirects","isPrivate":true,"id":"_maxRedirects","line":"66","kind":"variable"},{"ref":{"refId":"dart.core/Map","arguments":[{"refId":"dart.core/String","name":"String"},{"refId":"dart.core/String","name":"String"}],"name":"Map"},"isFinal":true,"comment":"The headers for this request.","name":"headers","id":"headers","line":"77","kind":"variable"},{"ref":{"refId":"dart.core/bool","name":"bool"},"name":"_finalized","isPrivate":true,"id":"_finalized","line":"81","kind":"variable"},{"comment":"Creates a new HTTP request.","name":"BaseRequest","id":"BaseRequest2()","children":[{"initializedField":{"refId":"base_request/BaseRequest/method","name":"method"},"ref":{"refId":"dart.core/String","name":"String"},"name":"method","id":"method","kind":"param"},{"initializedField":{"refId":"base_request/BaseRequest/url","name":"url"},"ref":{"refId":"dart.uri/Uri","name":"Uri"},"name":"url","id":"url","kind":"param"}],"line":"84","kind":"constructor"}],"line":"23","kind":"class"}],"line":"5","kind":"library"}],"uri":"package:http/src/multipart_request.dart","name":"package:http/src/multipart_request.dart","id":"multipart_request","children":[{"superclass":{"refId":"base_request/BaseRequest","name":"BaseRequest"},"comment":"A `multipart/form-data` request. Such a request has both string [fields],\nwhich function as normal form fields, and (potentially streamed) binary\n[files].\n\nThis request automatically sets the Content-Type header to\n`multipart/form-data` and the Content-Transfer-Encoding header to `binary`.\nThese values will override any values set by the user.\n\n    var uri = Uri.parse(\"http://pub.dartlang.org/packages/create\");\n    var request = new http.MultipartRequest(\"POST\", url);\n    request.fields['user'] = 'nweiz@google.com';\n    request.files.add(new http.MultipartFile.fromFile(\n        'package',\n        new File('build/package.tar.gz'),\n        contentType: new ContentType('application', 'x-tar'));\n    request.send().then((response) {\n      if (response.statusCode == 200) print(\"Uploaded!\");\n    });","name":"MultipartRequest","id":"MultipartRequest","children":[{"isSetter":true,"name":"contentLength=","id":"contentLength=1()","children":[{"ref":{"refId":"dart.core/int","name":"int"},"name":"value","id":"value","kind":"param"}],"line":"79","kind":"method"},{"returnType":{"refId":"byte_stream/ByteStream","name":"ByteStream"},"comment":"Freezes all mutable fields and returns a single-subscription [ByteStream]\nthat will emit the request body.","name":"finalize","id":"finalize0()","line":"86","kind":"method"},{"returnType":{"refId":"dart.core/String","name":"String"},"comment":"Returns the header string for a field. The return value is guaranteed to\ncontain only ASCII characters.","name":"_headerForField","isPrivate":true,"id":"_headerForField2()","children":[{"ref":{"refId":"dart.core/String","name":"String"},"name":"name","id":"name","kind":"param"},{"ref":{"refId":"dart.core/String","name":"String"},"name":"value","id":"value","kind":"param"}],"line":"137","kind":"method"},{"returnType":{"refId":"dart.core/String","name":"String"},"comment":"Returns the header string for a file. The return value is guaranteed to\ncontain only ASCII characters.","name":"_headerForFile","isPrivate":true,"id":"_headerForFile1()","children":[{"ref":{"refId":"multipart_file/MultipartFile","name":"MultipartFile"},"name":"file","id":"file","kind":"param"}],"line":"150","kind":"method"},{"returnType":{"refId":"dart.core/String","name":"String"},"comment":"Returns a randomly-generated multipart boundary string of the given\n[length].","name":"_boundaryString","isPrivate":true,"id":"_boundaryString1()","children":[{"ref":{"refId":"dart.core/int","name":"int"},"name":"length","id":"length","kind":"param"}],"line":"162","kind":"method"},{"ref":{"refId":"dart.core/List","arguments":[{"refId":"multipart_file/MultipartFile","name":"MultipartFile"}],"name":"List"},"comment":"The list of files to upload for this request.","name":"files","id":"files","line":"57","kind":"property"},{"ref":{"refId":"dart.core/int","name":"int"},"comment":"The total length of the request body, in bytes. This is calculated from\n[fields] and [files] and cannot be set manually.","name":"contentLength","id":"contentLength","line":"61","kind":"property"},{"ref":{"refId":"dart.core/int","name":"int"},"isFinal":true,"isStatic":true,"comment":"The total length of the multipart boundaries used when building the\nrequest body. According to http://tools.ietf.org/html/rfc1341.html, this\ncan't be longer than 70.","name":"_BOUNDARY_LENGTH","isPrivate":true,"id":"_BOUNDARY_LENGTH","line":"40","kind":"variable"},{"ref":{"refId":"dart.math/Random","name":"Random"},"isFinal":true,"isStatic":true,"name":"_random","isPrivate":true,"id":"_random","line":"42","kind":"variable"},{"ref":{"refId":"dart.core/Map","arguments":[{"refId":"dart.core/String","name":"String"},{"refId":"dart.core/String","name":"String"}],"name":"Map"},"isFinal":true,"comment":"The form fields to send for this request.","name":"fields","id":"fields","line":"45","kind":"variable"},{"ref":{"refId":"dart.core/List","arguments":[{"refId":"multipart_file/MultipartFile","name":"MultipartFile"}],"name":"List"},"isFinal":true,"comment":"The private version of [files].","name":"_files","isPrivate":true,"id":"_files","line":"48","kind":"variable"},{"ref":{"refId":"dart.core/List","arguments":[{"refId":"dart.core/int","name":"int"}],"name":"List"},"isFinal":true,"isStatic":true,"comment":"All character codes that are valid in multipart boundaries. From\nhttp://tools.ietf.org/html/rfc2046#section-5.1.1.","name":"_BOUNDARY_CHARACTERS","isPrivate":true,"id":"_BOUNDARY_CHARACTERS","line":"127","kind":"variable"},{"comment":"Creates a new [MultipartRequest].","name":"MultipartRequest","id":"MultipartRequest2()","children":[{"ref":{"refId":"dart.core/String","name":"String"},"name":"method","id":"method","kind":"param"},{"ref":{"refId":"dart.uri/Uri","name":"Uri"},"name":"url","id":"url","kind":"param"}],"line":"51","kind":"constructor"}],"line":"36","kind":"class"}],"line":"5","kind":"library"}