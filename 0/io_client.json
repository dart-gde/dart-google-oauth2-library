{"dependencies":[{"uri":"dart-google-oauth2-library/packages/http/src/client.dart","name":"file:///Users/damondouglas/Documents/projects/dart/dart-google-oauth2-library/packages/http/src/client.dart","id":"client","children":[{"isAbstract":true,"superclass":{"refId":"dart.core/Object","name":"Object"},"comment":"The interface for HTTP clients that take care of maintaining persistent\nconnections across multiple requests to the same server. If you only need to\nsend a single request, it's usually easier to use [head], [get], [post],\n[put], or [delete] instead.\n\nWhen creating an HTTP client class with additional functionality, you must\nextend [BaseClient] rather than [Client]. In most cases, you can wrap\nanother instance of [Client] and add functionality on top of that. This\nallows all classes implementing [Client] to be mutually composable.","name":"Client","id":"Client","children":[{"returnType":{"refId":"dart.async/Future","arguments":[{"refId":"response/Response","name":"Response"}],"name":"Future"},"comment":"Sends an HTTP HEAD request with the given headers to the given URL, which\ncan be a [Uri] or a [String].\n\nFor more fine-grained control over the request, use [send] instead.","name":"head","id":"head2()","children":[{"name":"url","id":"url","kind":"param"},{"isNamed":true,"ref":{"refId":"dart.core/Map","arguments":[{"refId":"dart.core/String","name":"String"},{"refId":"dart.core/String","name":"String"}],"name":"Map"},"isOptional":true,"name":"headers","id":"headers","kind":"param"}],"line":"36","kind":"method"},{"returnType":{"refId":"dart.async/Future","arguments":[{"refId":"response/Response","name":"Response"}],"name":"Future"},"comment":"Sends an HTTP GET request with the given headers to the given URL, which\ncan be a [Uri] or a [String].\n\nFor more fine-grained control over the request, use [send] instead.","name":"get","id":"get2()","children":[{"name":"url","id":"url","kind":"param"},{"isNamed":true,"ref":{"refId":"dart.core/Map","arguments":[{"refId":"dart.core/String","name":"String"},{"refId":"dart.core/String","name":"String"}],"name":"Map"},"isOptional":true,"name":"headers","id":"headers","kind":"param"}],"line":"42","kind":"method"},{"returnType":{"refId":"dart.async/Future","arguments":[{"refId":"response/Response","name":"Response"}],"name":"Future"},"comment":"Sends an HTTP POST request with the given headers and fields to the given\nURL, which can be a [Uri] or a [String]. If any fields are specified, the\ncontent-type is automatically set to\n`\"application/x-www-form-urlencoded\"`.\n\nFor more fine-grained control over the request, use [send] instead.","name":"post","id":"post3()","children":[{"name":"url","id":"url","kind":"param"},{"isNamed":true,"ref":{"refId":"dart.core/Map","arguments":[{"refId":"dart.core/String","name":"String"},{"refId":"dart.core/String","name":"String"}],"name":"Map"},"isOptional":true,"name":"headers","id":"headers","line":"51","kind":"param"},{"isNamed":true,"ref":{"refId":"dart.core/Map","arguments":[{"refId":"dart.core/String","name":"String"},{"refId":"dart.core/String","name":"String"}],"name":"Map"},"isOptional":true,"name":"fields","id":"fields","line":"52","kind":"param"}],"line":"50","kind":"method"},{"returnType":{"refId":"dart.async/Future","arguments":[{"refId":"response/Response","name":"Response"}],"name":"Future"},"comment":"Sends an HTTP PUT request with the given headers and fields to the given\nURL, which can be a [Uri] or a [String]. If any fields are specified, the\ncontent-type is automatically set to\n`\"application/x-www-form-urlencoded\"`.\n\nFor more fine-grained control over the request, use [send] instead.","name":"put","id":"put3()","children":[{"name":"url","id":"url","kind":"param"},{"isNamed":true,"ref":{"refId":"dart.core/Map","arguments":[{"refId":"dart.core/String","name":"String"},{"refId":"dart.core/String","name":"String"}],"name":"Map"},"isOptional":true,"name":"headers","id":"headers","line":"61","kind":"param"},{"isNamed":true,"ref":{"refId":"dart.core/Map","arguments":[{"refId":"dart.core/String","name":"String"},{"refId":"dart.core/String","name":"String"}],"name":"Map"},"isOptional":true,"name":"fields","id":"fields","line":"62","kind":"param"}],"line":"60","kind":"method"},{"returnType":{"refId":"dart.async/Future","arguments":[{"refId":"response/Response","name":"Response"}],"name":"Future"},"comment":"Sends an HTTP DELETE request with the given headers to the given URL,\nwhich can be a [Uri] or a [String].\n\nFor more fine-grained control over the request, use [send] instead.","name":"delete","id":"delete2()","children":[{"name":"url","id":"url","kind":"param"},{"isNamed":true,"ref":{"refId":"dart.core/Map","arguments":[{"refId":"dart.core/String","name":"String"},{"refId":"dart.core/String","name":"String"}],"name":"Map"},"isOptional":true,"name":"headers","id":"headers","kind":"param"}],"line":"68","kind":"method"},{"returnType":{"refId":"dart.async/Future","arguments":[{"refId":"dart.core/String","name":"String"}],"name":"Future"},"comment":"Sends an HTTP GET request with the given headers to the given URL, which\ncan be a [Uri] or a [String], and returns a Future that completes to the\nbody of the response as a String.\n\nThe Future will emit an [HttpException] if the response doesn't have a\nsuccess status code.\n\nFor more fine-grained control over the request and response, use [send] or\n[get] instead.","name":"read","id":"read2()","children":[{"name":"url","id":"url","kind":"param"},{"isNamed":true,"ref":{"refId":"dart.core/Map","arguments":[{"refId":"dart.core/String","name":"String"},{"refId":"dart.core/String","name":"String"}],"name":"Map"},"isOptional":true,"name":"headers","id":"headers","kind":"param"}],"line":"79","kind":"method"},{"returnType":{"refId":"dart.async/Future","arguments":[{"refId":"dart.typed_data/Uint8List","name":"Uint8List"}],"name":"Future"},"comment":"Sends an HTTP GET request with the given headers to the given URL, which\ncan be a [Uri] or a [String], and returns a Future that completes to the\nbody of the response as a list of bytes.\n\nThe Future will emit an [HttpException] if the response doesn't have a\nsuccess status code.\n\nFor more fine-grained control over the request and response, use [send] or\n[get] instead.","name":"readBytes","id":"readBytes2()","children":[{"name":"url","id":"url","kind":"param"},{"isNamed":true,"ref":{"refId":"dart.core/Map","arguments":[{"refId":"dart.core/String","name":"String"},{"refId":"dart.core/String","name":"String"}],"name":"Map"},"isOptional":true,"name":"headers","id":"headers","kind":"param"}],"line":"90","kind":"method"},{"returnType":{"refId":"dart.async/Future","arguments":[{"refId":"streamed_response/StreamedResponse","name":"StreamedResponse"}],"name":"Future"},"comment":"Sends an HTTP request and asynchronously returns the response.","name":"send","id":"send1()","children":[{"ref":{"refId":"base_request/BaseRequest","name":"BaseRequest"},"name":"request","id":"request","kind":"param"}],"line":"93","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"Closes the client and cleans up any resources associated with it. It's\nimportant to close each client when it's done being used; failing to do so\ncan cause the Dart process to hang.","name":"close","id":"close0()","line":"98","kind":"method"},{"comment":"Creates a new Client using the default implementation. This implementation\nuses an underlying `dart:io` [HttpClient] to make requests.","name":"Client","id":"Client0()","line":"30","kind":"constructor"}],"line":"27","kind":"class"}],"line":"5","kind":"library"},{"uri":"dart-sdk/lib/core/core.dart","name":"dart:core","id":"dart.core","children":[{"comment":"\nEverything in Dart is an [Object].\n","uri":"dart-sdk/lib/core/object.dart","name":"Object","id":"Object","children":[{"returnType":{"refId":"dart.core/bool","name":"bool"},"isOperator":true,"comment":"\nThe equality operator.\n\nThe default behavior for all [Object]s is to return true if and\nonly if [:this:] and [other] are the same object.\n\nIf a subclass overrides the equality operator it should override\nthe [hashCode] method as well to maintain consistency.\n","name":"==","id":"==1()","children":[{"name":"other","id":"other","kind":"param"}],"line":"29","kind":"method"},{"returnType":{"refId":"dart.core/String","name":"String"},"comment":"\nReturns a string representation of this object.\n","name":"toString","id":"toString0()","line":"48","kind":"method"},{"comment":"\n[noSuchMethod] is invoked when users invoke a non-existant method\non an object. The name of the method and the arguments of the\ninvocation are passed to [noSuchMethod] in an [Invocation].\nIf [noSuchMethod] returns a value, that value becomes the result of\nthe original invocation.\n\nThe default behavior of [noSuchMethod] is to throw a\n[noSuchMethodError].\n","name":"noSuchMethod","id":"noSuchMethod1()","children":[{"ref":{"refId":"dart.core/Invocation","name":"Invocation"},"name":"invocation","id":"invocation","kind":"param"}],"line":"60","kind":"method"},{"ref":{"refId":"dart.core/int","name":"int"},"comment":"\nGet a hash code for this object.\n\nAll objects have hash codes. Hash codes are guaranteed to be the\nsame for objects that are equal when compared using the equality\noperator [:==:]. Other than that there are no guarantees about\nthe hash codes. They will not be consistent between runs and\nthere are no distribution guarantees.\n\nIf a subclass overrides [hashCode] it should override the\nequality operator as well to maintain consistency.\n","name":"hashCode","id":"hashCode","line":"43","kind":"property"},{"ref":{"refId":"dart.core/Type","name":"Type"},"comment":"\nA representation of the runtime type of the object.\n","name":"runtimeType","id":"runtimeType","line":"65","kind":"property"},{"comment":"\nCreates a new [Object] instance.\n\n[Object] instances have no meaningful state, and are only useful\nthrough their identity. An [Object] instance is equal to itself\nonly.\n","name":"Object","id":"Object0()","line":"18","kind":"constructor"}],"line":"10","kind":"class"}],"line":"5","kind":"library"},{"uri":"dart-google-oauth2-library/packages/http/src/base_client.dart","name":"file:///Users/damondouglas/Documents/projects/dart/dart-google-oauth2-library/packages/http/src/base_client.dart","id":"base_client","children":[{"isAbstract":true,"interfaces":[{"refId":"client/Client","name":"Client"}],"superclass":{"refId":"dart.core/Object","name":"Object"},"comment":"The abstract base class for an HTTP client. This is a mixin-style class;\nsubclasses only need to implement [send] and maybe [close], and then they\nget various convenience methods for free.","name":"BaseClient","id":"BaseClient","children":[{"returnType":{"refId":"dart.async/Future","arguments":[{"refId":"response/Response","name":"Response"}],"name":"Future"},"comment":"Sends an HTTP HEAD request with the given headers to the given URL, which\ncan be a [Uri] or a [String].\n\nFor more fine-grained control over the request, use [send] instead.","name":"head","id":"head2()","children":[{"name":"url","id":"url","kind":"param"},{"isNamed":true,"ref":{"refId":"dart.core/Map","arguments":[{"refId":"dart.core/String","name":"String"},{"refId":"dart.core/String","name":"String"}],"name":"Map"},"isOptional":true,"name":"headers","id":"headers","kind":"param"}],"line":"27","kind":"method"},{"returnType":{"refId":"dart.async/Future","arguments":[{"refId":"response/Response","name":"Response"}],"name":"Future"},"comment":"Sends an HTTP GET request with the given headers to the given URL, which\ncan be a [Uri] or a [String].\n\nFor more fine-grained control over the request, use [send] instead.","name":"get","id":"get2()","children":[{"name":"url","id":"url","kind":"param"},{"isNamed":true,"ref":{"refId":"dart.core/Map","arguments":[{"refId":"dart.core/String","name":"String"},{"refId":"dart.core/String","name":"String"}],"name":"Map"},"isOptional":true,"name":"headers","id":"headers","kind":"param"}],"line":"34","kind":"method"},{"returnType":{"refId":"dart.async/Future","arguments":[{"refId":"response/Response","name":"Response"}],"name":"Future"},"comment":"Sends an HTTP POST request with the given headers and fields to the given\nURL, which can be a [Uri] or a [String]. If any fields are specified, the\ncontent-type is automatically set to\n`\"application/x-www-form-urlencoded\"`.\n\nFor more fine-grained control over the request, use [send] instead.","name":"post","id":"post3()","children":[{"name":"url","id":"url","kind":"param"},{"isNamed":true,"ref":{"refId":"dart.core/Map","arguments":[{"refId":"dart.core/String","name":"String"},{"refId":"dart.core/String","name":"String"}],"name":"Map"},"isOptional":true,"name":"headers","id":"headers","line":"44","kind":"param"},{"isNamed":true,"ref":{"refId":"dart.core/Map","arguments":[{"refId":"dart.core/String","name":"String"},{"refId":"dart.core/String","name":"String"}],"name":"Map"},"isOptional":true,"name":"fields","id":"fields","line":"45","kind":"param"}],"line":"43","kind":"method"},{"returnType":{"refId":"dart.async/Future","arguments":[{"refId":"response/Response","name":"Response"}],"name":"Future"},"comment":"Sends an HTTP PUT request with the given headers and fields to the given\nURL, which can be a [Uri] or a [String]. If any fields are specified, the\ncontent-type is automatically set to\n`\"application/x-www-form-urlencoded\"`.\n\nFor more fine-grained control over the request, use [send] instead.","name":"put","id":"put3()","children":[{"name":"url","id":"url","kind":"param"},{"isNamed":true,"ref":{"refId":"dart.core/Map","arguments":[{"refId":"dart.core/String","name":"String"},{"refId":"dart.core/String","name":"String"}],"name":"Map"},"isOptional":true,"name":"headers","id":"headers","line":"55","kind":"param"},{"isNamed":true,"ref":{"refId":"dart.core/Map","arguments":[{"refId":"dart.core/String","name":"String"},{"refId":"dart.core/String","name":"String"}],"name":"Map"},"isOptional":true,"name":"fields","id":"fields","line":"56","kind":"param"}],"line":"54","kind":"method"},{"returnType":{"refId":"dart.async/Future","arguments":[{"refId":"response/Response","name":"Response"}],"name":"Future"},"comment":"Sends an HTTP DELETE request with the given headers to the given URL,\nwhich can be a [Uri] or a [String].\n\nFor more fine-grained control over the request, use [send] instead.","name":"delete","id":"delete2()","children":[{"name":"url","id":"url","kind":"param"},{"isNamed":true,"ref":{"refId":"dart.core/Map","arguments":[{"refId":"dart.core/String","name":"String"},{"refId":"dart.core/String","name":"String"}],"name":"Map"},"isOptional":true,"name":"headers","id":"headers","kind":"param"}],"line":"63","kind":"method"},{"returnType":{"refId":"dart.async/Future","arguments":[{"refId":"dart.core/String","name":"String"}],"name":"Future"},"comment":"Sends an HTTP GET request with the given headers to the given URL, which\ncan be a [Uri] or a [String], and returns a Future that completes to the\nbody of the response as a String.\n\nThe Future will emit an [HttpException] if the response doesn't have a\nsuccess status code.\n\nFor more fine-grained control over the request and response, use [send] or\n[get] instead.","name":"read","id":"read2()","children":[{"name":"url","id":"url","kind":"param"},{"isNamed":true,"ref":{"refId":"dart.core/Map","arguments":[{"refId":"dart.core/String","name":"String"},{"refId":"dart.core/String","name":"String"}],"name":"Map"},"isOptional":true,"name":"headers","id":"headers","kind":"param"}],"line":"75","kind":"method"},{"returnType":{"refId":"dart.async/Future","arguments":[{"refId":"dart.typed_data/Uint8List","name":"Uint8List"}],"name":"Future"},"comment":"Sends an HTTP GET request with the given headers to the given URL, which\ncan be a [Uri] or a [String], and returns a Future that completes to the\nbody of the response as a list of bytes.\n\nThe Future will emit an [HttpException] if the response doesn't have a\nsuccess status code.\n\nFor more fine-grained control over the request and response, use [send] or\n[get] instead.","name":"readBytes","id":"readBytes2()","children":[{"name":"url","id":"url","kind":"param"},{"isNamed":true,"ref":{"refId":"dart.core/Map","arguments":[{"refId":"dart.core/String","name":"String"},{"refId":"dart.core/String","name":"String"}],"name":"Map"},"isOptional":true,"name":"headers","id":"headers","kind":"param"}],"line":"91","kind":"method"},{"returnType":{"refId":"dart.async/Future","arguments":[{"refId":"streamed_response/StreamedResponse","name":"StreamedResponse"}],"name":"Future"},"comment":"Sends an HTTP request and asynchronously returns the response.\n\nImplementers should call [BaseRequest.finalize] to get the body of the\nrequest as a [ByteStream]. They shouldn't make any assumptions about the\nstate of the stream; it could have data written to it asynchronously at a\nlater point, or it could already be closed when it's returned.","name":"send","id":"send1()","children":[{"ref":{"refId":"base_request/BaseRequest","name":"BaseRequest"},"name":"request","id":"request","kind":"param"}],"line":"104","kind":"method"},{"returnType":{"refId":"dart.async/Future","arguments":[{"refId":"response/Response","name":"Response"}],"name":"Future"},"comment":"Sends a non-streaming [Request] and returns a non-streaming [Response].","name":"_sendUnstreamed","isPrivate":true,"id":"_sendUnstreamed4()","children":[{"ref":{"refId":"dart.core/String","name":"String"},"name":"method","id":"method","line":"108","kind":"param"},{"name":"url","id":"url","line":"108","kind":"param"},{"ref":{"refId":"dart.core/Map","arguments":[{"refId":"dart.core/String","name":"String"},{"refId":"dart.core/String","name":"String"}],"name":"Map"},"name":"headers","id":"headers","line":"108","kind":"param"},{"ref":{"refId":"dart.core/Map","arguments":[{"refId":"dart.core/String","name":"String"},{"refId":"dart.core/String","name":"String"}],"name":"Map"},"isOptional":true,"name":"fields","id":"fields","line":"109","kind":"param"}],"line":"107","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"Throws an error if [response] is not successful.","name":"_checkResponseSuccess","isPrivate":true,"id":"_checkResponseSuccess2()","children":[{"name":"url","id":"url","kind":"param"},{"ref":{"refId":"response/Response","name":"Response"},"name":"response","id":"response","kind":"param"}],"line":"124","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"Closes the client and cleans up any resources associated with it. It's\nimportant to close each client when it's done being used; failing to do so\ncan cause the Dart process to hang.","name":"close","id":"close0()","line":"136","kind":"method"}],"line":"22","kind":"class"}],"line":"5","kind":"library"}],"uri":"dart-google-oauth2-library/packages/http/src/io_client.dart","name":"file:///Users/damondouglas/Documents/projects/dart/dart-google-oauth2-library/packages/http/src/io_client.dart","id":"io_client","children":[{"superclass":{"refId":"base_client/BaseClient","name":"BaseClient"},"comment":"A `dart:io`-based HTTP client. This is the default client.","name":"IOClient","id":"IOClient","children":[{"returnType":{"refId":"dart.async/Future","arguments":[{"refId":"streamed_response/StreamedResponse","name":"StreamedResponse"}],"name":"Future"},"comment":"Sends an HTTP request and asynchronously returns the response.","name":"send","id":"send1()","children":[{"ref":{"refId":"base_request/BaseRequest","name":"BaseRequest"},"name":"request","id":"request","kind":"param"}],"line":"24","kind":"method"},{"returnType":{"refId":"void","name":"void"},"comment":"Closes the client. This terminates all active connections. If a client\nremains unclosed, the Dart process may not terminate.","name":"close","id":"close0()","line":"56","kind":"method"},{"ref":{"refId":"dart.io/HttpClient","name":"HttpClient"},"comment":"The underlying `dart:io` HTTP client.","name":"_inner","isPrivate":true,"id":"_inner","line":"18","kind":"variable"},{"comment":"Creates a new HTTP client.","name":"IOClient","id":"IOClient0()","line":"21","kind":"constructor"}],"line":"16","kind":"class"}],"line":"5","kind":"library"}